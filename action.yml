name: "Raise.dev Version Uploader"
author: Raise.dev
branding:
  color: yellow
  icon: upload-cloud
description: "Raise's GitHub Action for uploading Versions to the Raise.dev Console."
inputs:
  workspace:
    description: "The name of the Workspace"
    required: true
  firmware:
    description: "The name of the Firmware"
    required: true
  binary:
    description: "The path of the binary file to upload"
    required: true
  name:
    description: "The name of the Version (defaults to `git describe` output). Must be unique within a Firmware."
    required: false
outputs:
  name:
    description: "The name of the newly uploaded Version"
    value: ${{ steps.version-json.outputs.name }}
  show-url:
    description: "The URL of the newly uploaded Version page"
    value: ${{ steps.version-json.outputs.show-url }}
  binary-url:
    description: "The URL of the newly uploaded Version binary for download"
    value: ${{ steps.version-json.outputs.binary-url }}
runs:
  using: "composite"
  steps:
    - id: set-name
      run: |
        # Set name input
        set -e

        name="${{ inputs.name }}"
        if [[ -z "${name}" ]]; then
          name="$(git describe --tags --always)"
        fi

        echo "name=${name}" | tee -a ${GITHUB_OUTPUT}
      shell: bash
    - run: |
        # Make API call to Raise.dev
        set -e

        set -x
        curl --fail-with-body \
          --form "workflow_run_id=${{ github.run_id }}" \
          --form "version[name]=${{ steps.set-name.outputs.name }}" \
          --form "version[binary]=@${{ inputs.binary }}" \
          https://console.raise.dev/workspaces/${{ inputs.workspace }}/firmwares/${{ inputs.firmware }}/v.json \
          | tee version.json
      shell: bash
    - id: version-json
      run: |
        # Set outputs
        set -e

        echo "name=$(jq --raw-output ".name" version.json)" | tee -a ${GITHUB_OUTPUT}
        echo "show-url=$(jq --raw-output ".show_url" version.json)" | tee -a ${GITHUB_OUTPUT}
        echo "binary-url=$(jq --raw-output ".binary_url" version.json)" | tee -a ${GITHUB_OUTPUT}
      shell: bash
