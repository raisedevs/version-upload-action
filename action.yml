name: "Raise.dev Version Uploader"
description: "Raise's GitHub Action for uploading Versions to Raise.dev."
inputs:
  project:
    description: "The name of the Project (or User)"
    required: true
  firmware:
    description: "The name of the Firmware"
    required: true
  path:
    description: "The path of the firmware binary to upload"
    required: true
  name:
    description: "The name of the Version (defaults to `git describe` output)"
    required: false
  commit:
    description: "The commit SHA of the Version (defaults to commit SHA)"
    default: ${{ github.sha }}
    required: false
  url:
    description: "A URL corresponding to this Version (defaults to GitHub Actions run URL)"
    default: ${{ github.repositoryUrl }}/actions/runs/${{ github.run_id }}/jobs/${{ github.run_number }}
    required: false
outputs:
  name:
    description: "The name of the newly uploaded Version"
    value: ${{ steps.version-json.outputs.name }}
  show-url:
    description: "The URL of the newly uploaded Version page"
    value: ${{ steps.version-json.outputs.show-url }}
  binary-url:
    description: "The URL of the newly uploaded Version binary"
    value: ${{ steps.version-json.outputs.binary-url }}
runs:
  using: "composite"
  steps:
    - id: set-name
      run: |
        name="${{ inputs.name }}"
        if [[ -z "${name}" ]]; then
          name="$(git describe --tags --always)"
        fi
        echo "name=${name}" >> $GITHUB_OUTPUT
      shell: bash
    - run: |
        eval "$(grep "^name=" $GITHUB_OUTPUT)"
        curl \
          -F "version[name]=${{ inputs.name }}" \
          -F "version[commit]=${{ inputs.commit }}" \
          -F "version[url]=${{ inputs.url }}" \
          -F "version[binary]=@${{ inputs.path }}" \
          https://dashboard.raise.dev/projects/${{ inputs.project }}/firmwares/${{ inputs.firmware }}/v/new.json \
          | tee version.json
      shell: bash
    - id: version-json
      run: |
        echo "name=$(jq --raw-output ".name" version.json)" >> $GITHUB_OUTPUT
        echo "show-url=$(jq --raw-output ".show_url" version.json)" >> $GITHUB_OUTPUT
        echo "binary-url=$(jq --raw-output ".binary_url" version.json)" >> $GITHUB_OUTPUT
      shell: bash
